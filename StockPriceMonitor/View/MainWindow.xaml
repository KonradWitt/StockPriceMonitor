<Window x:Class="StockPriceMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StockPriceMonitor"
        xmlns:vm="clr-namespace:StockPriceMonitor.ViewModel"
        xmlns:c="clr-namespace:StockPriceMonitor.Converters"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="StockPriceMonitor" Height="450" Width="600">
    <Window.DataContext>
        <vm:MainWindowContext/>
    </Window.DataContext>

    <Window.Resources>
        <c:PriceChangeToColorConverter x:Key="PriceChangeToColorConverter"/>
        <Style x:Key = "ButtonTextStyle" TargetType = "Button">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                        CornerRadius="8"
                        BorderThickness="2"
                        BorderBrush="Black">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Opacity" Value="0.2"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "ButtonImageStyle" TargetType = "Button">
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>

        </Style>
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
            </Style.Resources>
        </Style>
        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="Width" Value="400" />
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Margin" Value="10,10,10,10" />
            <Setter Property="Padding" Value="5,5,5,5" />
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Width" Value="200" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="LightGray" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border CornerRadius="8" BorderThickness="2" BorderBrush="Black" x:Name="Bd" Background="{TemplateBinding Panel.Background}">
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="Panel.Background" TargetName="Bd">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="Width" Value="200"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="Red"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Style="{StaticResource LabelStyle}" Content="{Binding Path=UserMessage}"/>
            <StackPanel Grid.Row="1"  Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBox Style="{StaticResource TextBoxStyle}"  Text="{Binding Path= SearchText, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Content="Add" Style = "{StaticResource ButtonTextStyle}" Command="{Binding AddTicker}"/>
            </StackPanel>
        </Grid>
        <Border Grid.Row="1" Style="{StaticResource BorderStyle}">
            <DataGrid  Style="{StaticResource DataGridStyle}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}" RowStyle="{StaticResource DataGridRowStyle}" ItemsSource="{Binding FavoriteStocks}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Ticker" Binding="{Binding Ticker}" Width="*" IsReadOnly="true">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Price ($)" Binding="{Binding Price}" Width="70" IsReadOnly="true">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="{Binding Path=PriceChange, Converter={StaticResource PriceChangeToColorConverter}}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="Manage" Width="70" IsReadOnly="true">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource ButtonImageStyle}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.DeleteTicker}" CommandParameter="{Binding Path=Ticker}">
                                    <Image Source="Pictures/Bin.png" Width="25" Height="25"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
        <StackPanel Grid.Row="2"  Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,10,10,10">
            <Button Content="Start Monitoring" Style = "{StaticResource ButtonTextStyle}" Command="{Binding StartMonitoring}"/>
            <Button Content="Stop Monitoring" Style = "{StaticResource ButtonTextStyle}"  Command="{Binding StopMonitoring}"/>
        </StackPanel>

    </Grid>
</Window>
